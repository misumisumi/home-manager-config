name: Auto approve
on:
  workflow_run:
    workflows: "*"
    types:
      - completed

jobs:
  check-status:
    runs-on: ubuntu-latest
    outputs:
      pr-number: ${{ steps.pr.outputs.result }}
    steps:
      - uses: actions/checkout@v4

      # From https://github.com/orgs/community/discussions/25220#discussioncomment-8697399
      - name: Find associated pull request
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const response = await github.rest.search.issuesAndPullRequests({
              q: 'repo:${{ github.repository }} is:pr sha:${{ github.event.workflow_run.head_sha }}',
              per_page: 1,
            })
            const items = response.data.items
            if (items.length < 1) {
              console.error('No PRs found')
              return
            }
            const pullRequestNumber = items[0].number
            console.info("Pull request number is", pullRequestNumber)
            return pullRequestNumber

      - name: Check PR Author
        id: pr-author
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          echo pr-author=$(gh pr view ${{ steps.pr.outputs.result }} --json author --jq .author.login) >> $GITHUB_OUTPUT

      - name: Check workflow status
        id: check-workflow-status
        if: contains(fromJSON('["misumisumi", "app/operate-pr-for-flakes"]'), steps.pr-author.outputs.pr-author)
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          exit $(gh pr view ${{ steps.pr.outputs.result }} --json statusCheckRollup | jq -r '[.statusCheckRollup.[].conclusion] | all(.=="SUCCESS" or "NEUTRAL")')

      - name: Always not approve
        id: always-not-approve
        if: ${{ !contains(fromJSON('["misumisumi", "app/operate-pr-for-flakes"]'), steps.pr-author.outputs.pr-author) }}
        run: |
          exit 1

  on-success:
    runs-on: ubuntu-latest
    needs: check-status
    if: needs.check-status.result == 'success'
    steps:
      - uses: actions/checkout@v4

      - name: PR review and merge
        id: pr-approve
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh pr review --approve ${{ needs.check-status.outputs.pr-number }}

  # on-failure:
  #   runs-on: ubuntu-latest
  #   needs: on-success
  #   if: needs.on-success.result != 'success'
  #   steps:
  #     - name: Error handling
  #       run: |
  #         echo "Not approve"
  #         exit 1
